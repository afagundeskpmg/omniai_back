// <auto-generated />
using System;
using Dados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dados.Migrations
{
    [DbContext(typeof(ContextoBase))]
    [Migration("20231005192823_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnexoEmail", b =>
                {
                    b.Property<int>("AnexoId")
                        .HasColumnType("int");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.HasKey("AnexoId", "EmailId");

                    b.HasIndex("EmailId");

                    b.ToTable("AnexoEmail");
                });

            modelBuilder.Entity("Dominio.Entidades.Ambiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CognitiveSearchIndexName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CognitiveSearchSkillSetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CongnitiveSearchSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<int>("LimiteTokenPorRequisicao")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroEntidades")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaximaUsuariosAtivos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Ambiente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            CognitiveSearchIndexName = "omniai-index-vf",
                            CognitiveSearchSkillSetName = "skillset1695926195364",
                            CongnitiveSearchSize = 3,
                            CriadoEm = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CriadoPorId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            Excluido = false,
                            LimiteTokenPorRequisicao = 7160,
                            NumeroEntidades = 10,
                            QuantidadeMaximaUsuariosAtivos = 10,
                            UltimaAlteracaoEm = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UltimaAlteracaoPorId = "f60753d7-c5a7-4496-a360-c1a301d87763"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnexoArquivoTipoId")
                        .HasColumnType("int");

                    b.Property<int>("AnexoTipoId")
                        .HasColumnType("int");

                    b.Property<int>("ArquivoFormatoId")
                        .HasColumnType("int");

                    b.Property<string>("BlobContainerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CaminhoArquivoBlobStorage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("CriadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("NomeArquivoAlterado")
                        .IsRequired()
                        .HasMaxLength(68)
                        .HasColumnType("nvarchar(68)");

                    b.Property<string>("NomeArquivoOriginal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AnexoArquivoTipoId");

                    b.HasIndex("AnexoTipoId");

                    b.HasIndex("ArquivoFormatoId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Anexo");
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoArquivoTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuantidadeMaxima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnexoArquivoTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Outros",
                            QuantidadeMaxima = 0
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Carga",
                            QuantidadeMaxima = 0
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Página HTML",
                            QuantidadeMaxima = 0
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Documento",
                            QuantidadeMaxima = 0
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoArquivoTipoArquivoFormato", b =>
                {
                    b.Property<int>("AnexoArquivoTipoId")
                        .HasColumnType("int");

                    b.Property<int>("ArquivoFormatoId")
                        .HasColumnType("int");

                    b.HasKey("AnexoArquivoTipoId", "ArquivoFormatoId");

                    b.HasIndex("ArquivoFormatoId");

                    b.ToTable("AnexoArquivoTipoArquivoFormato");

                    b.HasData(
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 11
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 12
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 63
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 15
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 22
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 21
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 36
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 37
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 58
                        },
                        new
                        {
                            AnexoArquivoTipoId = 1,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            AnexoArquivoTipoId = 2,
                            ArquivoFormatoId = 11
                        },
                        new
                        {
                            AnexoArquivoTipoId = 2,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            AnexoArquivoTipoId = 2,
                            ArquivoFormatoId = 58
                        },
                        new
                        {
                            AnexoArquivoTipoId = 2,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            AnexoArquivoTipoId = 3,
                            ArquivoFormatoId = 16
                        },
                        new
                        {
                            AnexoArquivoTipoId = 4,
                            ArquivoFormatoId = 37
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoPagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnexoId")
                        .HasColumnType("int");

                    b.Property<int>("AnexoPaiId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("PerguntaRespostaId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AnexoId");

                    b.HasIndex("AnexoPaiId");

                    b.HasIndex("PerguntaRespostaId");

                    b.ToTable("AnexoPagina");
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AnexoTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Email Corpo"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Documento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Documento Página"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("TamanhoMaximoMb")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ArquivoFormato");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MimeType = "audio/aac",
                            Nome = ".aac",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 2,
                            MimeType = "application/x-abiword",
                            Nome = ".abw",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 3,
                            MimeType = "application/octet-stream",
                            Nome = ".arc",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 4,
                            MimeType = "video/x-msvideo",
                            Nome = ".avi",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 5,
                            MimeType = "application/vnd.amazon.ebook",
                            Nome = ".azw",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 6,
                            MimeType = "application/octet-stream",
                            Nome = ".bin",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 7,
                            MimeType = "application/x-bzip",
                            Nome = ".bz",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 8,
                            MimeType = "application/x-bzip2",
                            Nome = ".bz2",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 9,
                            MimeType = "application/x-csh",
                            Nome = ".csh",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 10,
                            MimeType = "text/css",
                            Nome = ".css",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 11,
                            MimeType = "text/csv",
                            Nome = ".csv",
                            TamanhoMaximoMb = 150.0
                        },
                        new
                        {
                            Id = 12,
                            MimeType = "application/msword",
                            Nome = ".doc",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 13,
                            MimeType = "application/vnd.ms-fontobject",
                            Nome = ".eot",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 14,
                            MimeType = "application/epub+zip",
                            Nome = ".epub",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 15,
                            MimeType = "image/gif",
                            Nome = ".gif",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 16,
                            MimeType = "text/html",
                            Nome = ".htm",
                            TamanhoMaximoMb = 10.0
                        },
                        new
                        {
                            Id = 17,
                            MimeType = "text/html",
                            Nome = ".html",
                            TamanhoMaximoMb = 10.0
                        },
                        new
                        {
                            Id = 18,
                            MimeType = "image/x-icon",
                            Nome = ".ico",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 19,
                            MimeType = "text/calendar",
                            Nome = ".ics",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 20,
                            MimeType = "application/java-archive",
                            Nome = ".jar",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 21,
                            MimeType = "image/jpeg",
                            Nome = ".jpeg",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 22,
                            MimeType = "image/jpeg",
                            Nome = ".jpg",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 23,
                            MimeType = "application/javascript",
                            Nome = ".js",
                            TamanhoMaximoMb = 0.0
                        },
                        new
                        {
                            Id = 24,
                            MimeType = "application/json",
                            Nome = ".json",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 25,
                            MimeType = "audio/midi",
                            Nome = ".mid",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 26,
                            MimeType = "audio/midi",
                            Nome = ".midi",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 27,
                            MimeType = "video/mpeg",
                            Nome = ".mpeg",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 28,
                            MimeType = "application/vnd.apple.installer+xml",
                            Nome = ".mpkg",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 29,
                            MimeType = "application/vnd.oasis.opendocument.presentation",
                            Nome = ".odp",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 30,
                            MimeType = "application/vnd.oasis.opendocument.spreadsheet",
                            Nome = ".ods",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 31,
                            MimeType = "application/vnd.oasis.opendocument.text",
                            Nome = ".odt",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 32,
                            MimeType = "audio/ogg",
                            Nome = ".oga",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 33,
                            MimeType = "video/ogg",
                            Nome = ".ogv",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 34,
                            MimeType = "application/ogg",
                            Nome = ".ogx",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 35,
                            MimeType = "font/otf",
                            Nome = ".otf",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 36,
                            MimeType = "image/png",
                            Nome = ".png",
                            TamanhoMaximoMb = 10.0
                        },
                        new
                        {
                            Id = 37,
                            MimeType = "application/pdf",
                            Nome = ".pdf",
                            TamanhoMaximoMb = 100.0
                        },
                        new
                        {
                            Id = 38,
                            MimeType = "application/vnd.ms-powerpoint",
                            Nome = ".ppt",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 39,
                            MimeType = "application/x-rar-compressed",
                            Nome = ".rar",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 40,
                            MimeType = "application/rtf",
                            Nome = ".rtf",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 41,
                            MimeType = "application/x-sh",
                            Nome = ".sh",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 42,
                            MimeType = "image/svg+xml",
                            Nome = ".svg",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 43,
                            MimeType = "application/x-shockwave-flash",
                            Nome = ".swf",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 44,
                            MimeType = "application/x-tar",
                            Nome = ".tar",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 45,
                            MimeType = "image/tiff",
                            Nome = ".tif",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 46,
                            MimeType = "image/tiff",
                            Nome = ".tiff",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 47,
                            MimeType = "application/typescript",
                            Nome = ".ts",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 48,
                            MimeType = "font/ttf",
                            Nome = ".ttf",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 49,
                            MimeType = "application/vnd.visio",
                            Nome = ".vsd",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 50,
                            MimeType = "audio/x-wav",
                            Nome = ".wav",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 51,
                            MimeType = "audio/webm",
                            Nome = ".weba",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 52,
                            MimeType = "video/webm",
                            Nome = ".webm",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 53,
                            MimeType = "image/webp",
                            Nome = ".webp",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 54,
                            MimeType = "font/woff",
                            Nome = ".woff",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 55,
                            MimeType = "font/woff2",
                            Nome = ".woff2",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 56,
                            MimeType = "application/xhtml+xml",
                            Nome = ".xhtml",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 57,
                            MimeType = "application/vnd.ms-excel",
                            Nome = ".xls",
                            TamanhoMaximoMb = 150.0
                        },
                        new
                        {
                            Id = 58,
                            MimeType = "application/vnd.ms-excel",
                            Nome = ".xlsx",
                            TamanhoMaximoMb = 150.0
                        },
                        new
                        {
                            Id = 59,
                            MimeType = "application/xml",
                            Nome = ".xml",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 60,
                            MimeType = "application/vnd.mozilla.xul+xml",
                            Nome = ".xul",
                            TamanhoMaximoMb = 5.0
                        },
                        new
                        {
                            Id = 61,
                            MimeType = "application/zip",
                            Nome = ".zip",
                            TamanhoMaximoMb = 80.0
                        },
                        new
                        {
                            Id = 62,
                            MimeType = "application/txt",
                            Nome = ".txt",
                            TamanhoMaximoMb = 10.0
                        },
                        new
                        {
                            Id = 63,
                            MimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                            Nome = ".docx",
                            TamanhoMaximoMb = 5.0
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormatoAssinatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArquivoFormatoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoFormatoId");

                    b.ToTable("ArquivoFormatoAssinatura");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArquivoFormatoId = 37
                        },
                        new
                        {
                            Id = 2,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 3,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 4,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 5,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 6,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 7,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 8,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 9,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 10,
                            ArquivoFormatoId = 57
                        },
                        new
                        {
                            Id = 11,
                            ArquivoFormatoId = 58
                        },
                        new
                        {
                            Id = 12,
                            ArquivoFormatoId = 58
                        },
                        new
                        {
                            Id = 13,
                            ArquivoFormatoId = 63
                        },
                        new
                        {
                            Id = 14,
                            ArquivoFormatoId = 63
                        },
                        new
                        {
                            Id = 15,
                            ArquivoFormatoId = 12
                        },
                        new
                        {
                            Id = 16,
                            ArquivoFormatoId = 12
                        },
                        new
                        {
                            Id = 17,
                            ArquivoFormatoId = 12
                        },
                        new
                        {
                            Id = 18,
                            ArquivoFormatoId = 12
                        },
                        new
                        {
                            Id = 19,
                            ArquivoFormatoId = 12
                        },
                        new
                        {
                            Id = 20,
                            ArquivoFormatoId = 15
                        },
                        new
                        {
                            Id = 21,
                            ArquivoFormatoId = 18
                        },
                        new
                        {
                            Id = 22,
                            ArquivoFormatoId = 22
                        },
                        new
                        {
                            Id = 23,
                            ArquivoFormatoId = 22
                        },
                        new
                        {
                            Id = 24,
                            ArquivoFormatoId = 22
                        },
                        new
                        {
                            Id = 25,
                            ArquivoFormatoId = 21
                        },
                        new
                        {
                            Id = 26,
                            ArquivoFormatoId = 21
                        },
                        new
                        {
                            Id = 27,
                            ArquivoFormatoId = 21
                        },
                        new
                        {
                            Id = 28,
                            ArquivoFormatoId = 36
                        },
                        new
                        {
                            Id = 29,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 30,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 31,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 32,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 33,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 34,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 35,
                            ArquivoFormatoId = 38
                        },
                        new
                        {
                            Id = 36,
                            ArquivoFormatoId = 40
                        },
                        new
                        {
                            Id = 37,
                            ArquivoFormatoId = 45
                        },
                        new
                        {
                            Id = 38,
                            ArquivoFormatoId = 45
                        },
                        new
                        {
                            Id = 39,
                            ArquivoFormatoId = 45
                        },
                        new
                        {
                            Id = 40,
                            ArquivoFormatoId = 45
                        },
                        new
                        {
                            Id = 41,
                            ArquivoFormatoId = 46
                        },
                        new
                        {
                            Id = 42,
                            ArquivoFormatoId = 46
                        },
                        new
                        {
                            Id = 43,
                            ArquivoFormatoId = 46
                        },
                        new
                        {
                            Id = 44,
                            ArquivoFormatoId = 46
                        },
                        new
                        {
                            Id = 45,
                            ArquivoFormatoId = 59
                        },
                        new
                        {
                            Id = 46,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 47,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 48,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 49,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 50,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 51,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 52,
                            ArquivoFormatoId = 61
                        },
                        new
                        {
                            Id = 53,
                            ArquivoFormatoId = 3
                        },
                        new
                        {
                            Id = 54,
                            ArquivoFormatoId = 3
                        },
                        new
                        {
                            Id = 55,
                            ArquivoFormatoId = 3
                        },
                        new
                        {
                            Id = 56,
                            ArquivoFormatoId = 3
                        },
                        new
                        {
                            Id = 57,
                            ArquivoFormatoId = 3
                        },
                        new
                        {
                            Id = 58,
                            ArquivoFormatoId = 3
                        },
                        new
                        {
                            Id = 59,
                            ArquivoFormatoId = 4
                        },
                        new
                        {
                            Id = 60,
                            ArquivoFormatoId = 6
                        },
                        new
                        {
                            Id = 61,
                            ArquivoFormatoId = 8
                        },
                        new
                        {
                            Id = 62,
                            ArquivoFormatoId = 9
                        },
                        new
                        {
                            Id = 63,
                            ArquivoFormatoId = 20
                        },
                        new
                        {
                            Id = 64,
                            ArquivoFormatoId = 20
                        },
                        new
                        {
                            Id = 65,
                            ArquivoFormatoId = 20
                        },
                        new
                        {
                            Id = 66,
                            ArquivoFormatoId = 20
                        },
                        new
                        {
                            Id = 67,
                            ArquivoFormatoId = 21
                        },
                        new
                        {
                            Id = 68,
                            ArquivoFormatoId = 22
                        },
                        new
                        {
                            Id = 69,
                            ArquivoFormatoId = 29
                        },
                        new
                        {
                            Id = 70,
                            ArquivoFormatoId = 31
                        },
                        new
                        {
                            Id = 71,
                            ArquivoFormatoId = 32
                        },
                        new
                        {
                            Id = 72,
                            ArquivoFormatoId = 33
                        },
                        new
                        {
                            Id = 73,
                            ArquivoFormatoId = 34
                        },
                        new
                        {
                            Id = 74,
                            ArquivoFormatoId = 39
                        },
                        new
                        {
                            Id = 75,
                            ArquivoFormatoId = 43
                        },
                        new
                        {
                            Id = 76,
                            ArquivoFormatoId = 43
                        },
                        new
                        {
                            Id = 77,
                            ArquivoFormatoId = 44
                        },
                        new
                        {
                            Id = 78,
                            ArquivoFormatoId = 49
                        },
                        new
                        {
                            Id = 79,
                            ArquivoFormatoId = 50
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormatoAssinaturaByte", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ArquivoFormatoAssinaturaId")
                        .HasColumnType("int");

                    b.Property<byte>("Byte")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoFormatoAssinaturaId");

                    b.ToTable("ArquivoFormatoAssinaturaByte");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArquivoFormatoAssinaturaId = 1,
                            Byte = (byte)37
                        },
                        new
                        {
                            Id = 2,
                            ArquivoFormatoAssinaturaId = 1,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 3,
                            ArquivoFormatoAssinaturaId = 1,
                            Byte = (byte)68
                        },
                        new
                        {
                            Id = 4,
                            ArquivoFormatoAssinaturaId = 1,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 5,
                            ArquivoFormatoAssinaturaId = 2,
                            Byte = (byte)208
                        },
                        new
                        {
                            Id = 6,
                            ArquivoFormatoAssinaturaId = 2,
                            Byte = (byte)207
                        },
                        new
                        {
                            Id = 7,
                            ArquivoFormatoAssinaturaId = 2,
                            Byte = (byte)17
                        },
                        new
                        {
                            Id = 8,
                            ArquivoFormatoAssinaturaId = 2,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 9,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)208
                        },
                        new
                        {
                            Id = 10,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)207
                        },
                        new
                        {
                            Id = 11,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)17
                        },
                        new
                        {
                            Id = 12,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 13,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)161
                        },
                        new
                        {
                            Id = 14,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)177
                        },
                        new
                        {
                            Id = 15,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 16,
                            ArquivoFormatoAssinaturaId = 3,
                            Byte = (byte)225
                        },
                        new
                        {
                            Id = 17,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)9
                        },
                        new
                        {
                            Id = 18,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)8
                        },
                        new
                        {
                            Id = 19,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)16
                        },
                        new
                        {
                            Id = 20,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 21,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 22,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)6
                        },
                        new
                        {
                            Id = 23,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)5
                        },
                        new
                        {
                            Id = 24,
                            ArquivoFormatoAssinaturaId = 4,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 25,
                            ArquivoFormatoAssinaturaId = 5,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 26,
                            ArquivoFormatoAssinaturaId = 5,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 27,
                            ArquivoFormatoAssinaturaId = 5,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 28,
                            ArquivoFormatoAssinaturaId = 5,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 29,
                            ArquivoFormatoAssinaturaId = 5,
                            Byte = (byte)16
                        },
                        new
                        {
                            Id = 30,
                            ArquivoFormatoAssinaturaId = 6,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 31,
                            ArquivoFormatoAssinaturaId = 6,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 32,
                            ArquivoFormatoAssinaturaId = 6,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 33,
                            ArquivoFormatoAssinaturaId = 6,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 34,
                            ArquivoFormatoAssinaturaId = 6,
                            Byte = (byte)31
                        },
                        new
                        {
                            Id = 35,
                            ArquivoFormatoAssinaturaId = 7,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 36,
                            ArquivoFormatoAssinaturaId = 7,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 37,
                            ArquivoFormatoAssinaturaId = 7,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 38,
                            ArquivoFormatoAssinaturaId = 7,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 39,
                            ArquivoFormatoAssinaturaId = 7,
                            Byte = (byte)34
                        },
                        new
                        {
                            Id = 40,
                            ArquivoFormatoAssinaturaId = 8,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 41,
                            ArquivoFormatoAssinaturaId = 8,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 42,
                            ArquivoFormatoAssinaturaId = 8,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 43,
                            ArquivoFormatoAssinaturaId = 8,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 44,
                            ArquivoFormatoAssinaturaId = 8,
                            Byte = (byte)35
                        },
                        new
                        {
                            Id = 45,
                            ArquivoFormatoAssinaturaId = 9,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 46,
                            ArquivoFormatoAssinaturaId = 9,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 47,
                            ArquivoFormatoAssinaturaId = 9,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 48,
                            ArquivoFormatoAssinaturaId = 9,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 49,
                            ArquivoFormatoAssinaturaId = 9,
                            Byte = (byte)40
                        },
                        new
                        {
                            Id = 50,
                            ArquivoFormatoAssinaturaId = 10,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 51,
                            ArquivoFormatoAssinaturaId = 10,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 52,
                            ArquivoFormatoAssinaturaId = 10,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 53,
                            ArquivoFormatoAssinaturaId = 10,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 54,
                            ArquivoFormatoAssinaturaId = 10,
                            Byte = (byte)41
                        },
                        new
                        {
                            Id = 55,
                            ArquivoFormatoAssinaturaId = 11,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 56,
                            ArquivoFormatoAssinaturaId = 11,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 57,
                            ArquivoFormatoAssinaturaId = 11,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 58,
                            ArquivoFormatoAssinaturaId = 11,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 59,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 60,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 61,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 62,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 63,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)20
                        },
                        new
                        {
                            Id = 64,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 65,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)6
                        },
                        new
                        {
                            Id = 66,
                            ArquivoFormatoAssinaturaId = 12,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 67,
                            ArquivoFormatoAssinaturaId = 13,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 68,
                            ArquivoFormatoAssinaturaId = 13,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 69,
                            ArquivoFormatoAssinaturaId = 13,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 70,
                            ArquivoFormatoAssinaturaId = 13,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 71,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 72,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 73,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 74,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 75,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)20
                        },
                        new
                        {
                            Id = 76,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 77,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)6
                        },
                        new
                        {
                            Id = 78,
                            ArquivoFormatoAssinaturaId = 14,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 79,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)208
                        },
                        new
                        {
                            Id = 80,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)207
                        },
                        new
                        {
                            Id = 81,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)17
                        },
                        new
                        {
                            Id = 82,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 83,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)161
                        },
                        new
                        {
                            Id = 84,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)177
                        },
                        new
                        {
                            Id = 85,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 86,
                            ArquivoFormatoAssinaturaId = 15,
                            Byte = (byte)225
                        },
                        new
                        {
                            Id = 87,
                            ArquivoFormatoAssinaturaId = 16,
                            Byte = (byte)13
                        },
                        new
                        {
                            Id = 88,
                            ArquivoFormatoAssinaturaId = 16,
                            Byte = (byte)68
                        },
                        new
                        {
                            Id = 89,
                            ArquivoFormatoAssinaturaId = 16,
                            Byte = (byte)79
                        },
                        new
                        {
                            Id = 90,
                            ArquivoFormatoAssinaturaId = 16,
                            Byte = (byte)67
                        },
                        new
                        {
                            Id = 91,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)207
                        },
                        new
                        {
                            Id = 92,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)17
                        },
                        new
                        {
                            Id = 93,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 94,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)161
                        },
                        new
                        {
                            Id = 95,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)177
                        },
                        new
                        {
                            Id = 96,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 97,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)225
                        },
                        new
                        {
                            Id = 98,
                            ArquivoFormatoAssinaturaId = 17,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 99,
                            ArquivoFormatoAssinaturaId = 18,
                            Byte = (byte)219
                        },
                        new
                        {
                            Id = 100,
                            ArquivoFormatoAssinaturaId = 18,
                            Byte = (byte)165
                        },
                        new
                        {
                            Id = 101,
                            ArquivoFormatoAssinaturaId = 18,
                            Byte = (byte)45
                        },
                        new
                        {
                            Id = 102,
                            ArquivoFormatoAssinaturaId = 18,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 103,
                            ArquivoFormatoAssinaturaId = 19,
                            Byte = (byte)236
                        },
                        new
                        {
                            Id = 104,
                            ArquivoFormatoAssinaturaId = 19,
                            Byte = (byte)165
                        },
                        new
                        {
                            Id = 105,
                            ArquivoFormatoAssinaturaId = 19,
                            Byte = (byte)193
                        },
                        new
                        {
                            Id = 106,
                            ArquivoFormatoAssinaturaId = 19,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 107,
                            ArquivoFormatoAssinaturaId = 20,
                            Byte = (byte)71
                        },
                        new
                        {
                            Id = 108,
                            ArquivoFormatoAssinaturaId = 20,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 109,
                            ArquivoFormatoAssinaturaId = 20,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 110,
                            ArquivoFormatoAssinaturaId = 20,
                            Byte = (byte)56
                        },
                        new
                        {
                            Id = 111,
                            ArquivoFormatoAssinaturaId = 21,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 112,
                            ArquivoFormatoAssinaturaId = 21,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 113,
                            ArquivoFormatoAssinaturaId = 21,
                            Byte = (byte)1
                        },
                        new
                        {
                            Id = 114,
                            ArquivoFormatoAssinaturaId = 21,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 115,
                            ArquivoFormatoAssinaturaId = 22,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 116,
                            ArquivoFormatoAssinaturaId = 22,
                            Byte = (byte)216
                        },
                        new
                        {
                            Id = 117,
                            ArquivoFormatoAssinaturaId = 22,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 118,
                            ArquivoFormatoAssinaturaId = 22,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 119,
                            ArquivoFormatoAssinaturaId = 23,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 120,
                            ArquivoFormatoAssinaturaId = 23,
                            Byte = (byte)216
                        },
                        new
                        {
                            Id = 121,
                            ArquivoFormatoAssinaturaId = 23,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 122,
                            ArquivoFormatoAssinaturaId = 23,
                            Byte = (byte)225
                        },
                        new
                        {
                            Id = 123,
                            ArquivoFormatoAssinaturaId = 24,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 124,
                            ArquivoFormatoAssinaturaId = 24,
                            Byte = (byte)216
                        },
                        new
                        {
                            Id = 125,
                            ArquivoFormatoAssinaturaId = 24,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 126,
                            ArquivoFormatoAssinaturaId = 24,
                            Byte = (byte)232
                        },
                        new
                        {
                            Id = 127,
                            ArquivoFormatoAssinaturaId = 25,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 128,
                            ArquivoFormatoAssinaturaId = 25,
                            Byte = (byte)216
                        },
                        new
                        {
                            Id = 129,
                            ArquivoFormatoAssinaturaId = 25,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 130,
                            ArquivoFormatoAssinaturaId = 25,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 131,
                            ArquivoFormatoAssinaturaId = 26,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 132,
                            ArquivoFormatoAssinaturaId = 26,
                            Byte = (byte)216
                        },
                        new
                        {
                            Id = 133,
                            ArquivoFormatoAssinaturaId = 26,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 134,
                            ArquivoFormatoAssinaturaId = 26,
                            Byte = (byte)226
                        },
                        new
                        {
                            Id = 135,
                            ArquivoFormatoAssinaturaId = 27,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 136,
                            ArquivoFormatoAssinaturaId = 27,
                            Byte = (byte)216
                        },
                        new
                        {
                            Id = 137,
                            ArquivoFormatoAssinaturaId = 27,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 138,
                            ArquivoFormatoAssinaturaId = 27,
                            Byte = (byte)227
                        },
                        new
                        {
                            Id = 139,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)137
                        },
                        new
                        {
                            Id = 140,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 141,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)78
                        },
                        new
                        {
                            Id = 142,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)71
                        },
                        new
                        {
                            Id = 143,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)13
                        },
                        new
                        {
                            Id = 144,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)10
                        },
                        new
                        {
                            Id = 145,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 146,
                            ArquivoFormatoAssinaturaId = 28,
                            Byte = (byte)10
                        },
                        new
                        {
                            Id = 147,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)208
                        },
                        new
                        {
                            Id = 148,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)207
                        },
                        new
                        {
                            Id = 149,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)17
                        },
                        new
                        {
                            Id = 150,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 151,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)161
                        },
                        new
                        {
                            Id = 152,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)177
                        },
                        new
                        {
                            Id = 153,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 154,
                            ArquivoFormatoAssinaturaId = 29,
                            Byte = (byte)225
                        },
                        new
                        {
                            Id = 155,
                            ArquivoFormatoAssinaturaId = 30,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 156,
                            ArquivoFormatoAssinaturaId = 30,
                            Byte = (byte)110
                        },
                        new
                        {
                            Id = 157,
                            ArquivoFormatoAssinaturaId = 30,
                            Byte = (byte)30
                        },
                        new
                        {
                            Id = 158,
                            ArquivoFormatoAssinaturaId = 30,
                            Byte = (byte)240
                        },
                        new
                        {
                            Id = 159,
                            ArquivoFormatoAssinaturaId = 31,
                            Byte = (byte)15
                        },
                        new
                        {
                            Id = 160,
                            ArquivoFormatoAssinaturaId = 31,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 161,
                            ArquivoFormatoAssinaturaId = 31,
                            Byte = (byte)232
                        },
                        new
                        {
                            Id = 162,
                            ArquivoFormatoAssinaturaId = 31,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 163,
                            ArquivoFormatoAssinaturaId = 32,
                            Byte = (byte)160
                        },
                        new
                        {
                            Id = 164,
                            ArquivoFormatoAssinaturaId = 32,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 165,
                            ArquivoFormatoAssinaturaId = 32,
                            Byte = (byte)29
                        },
                        new
                        {
                            Id = 166,
                            ArquivoFormatoAssinaturaId = 32,
                            Byte = (byte)240
                        },
                        new
                        {
                            Id = 167,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 168,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 169,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 170,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 171,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)14
                        },
                        new
                        {
                            Id = 172,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 173,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 174,
                            ArquivoFormatoAssinaturaId = 33,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 175,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 176,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 177,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 178,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 179,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)28
                        },
                        new
                        {
                            Id = 180,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 181,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 182,
                            ArquivoFormatoAssinaturaId = 34,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 183,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)253
                        },
                        new
                        {
                            Id = 184,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 185,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 186,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)255
                        },
                        new
                        {
                            Id = 187,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)67
                        },
                        new
                        {
                            Id = 188,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 189,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 190,
                            ArquivoFormatoAssinaturaId = 35,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 191,
                            ArquivoFormatoAssinaturaId = 36,
                            Byte = (byte)123
                        },
                        new
                        {
                            Id = 192,
                            ArquivoFormatoAssinaturaId = 36,
                            Byte = (byte)92
                        },
                        new
                        {
                            Id = 193,
                            ArquivoFormatoAssinaturaId = 36,
                            Byte = (byte)114
                        },
                        new
                        {
                            Id = 194,
                            ArquivoFormatoAssinaturaId = 36,
                            Byte = (byte)116
                        },
                        new
                        {
                            Id = 195,
                            ArquivoFormatoAssinaturaId = 36,
                            Byte = (byte)102
                        },
                        new
                        {
                            Id = 196,
                            ArquivoFormatoAssinaturaId = 36,
                            Byte = (byte)49
                        },
                        new
                        {
                            Id = 197,
                            ArquivoFormatoAssinaturaId = 37,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 198,
                            ArquivoFormatoAssinaturaId = 37,
                            Byte = (byte)32
                        },
                        new
                        {
                            Id = 199,
                            ArquivoFormatoAssinaturaId = 37,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 200,
                            ArquivoFormatoAssinaturaId = 38,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 201,
                            ArquivoFormatoAssinaturaId = 38,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 202,
                            ArquivoFormatoAssinaturaId = 38,
                            Byte = (byte)42
                        },
                        new
                        {
                            Id = 203,
                            ArquivoFormatoAssinaturaId = 38,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 204,
                            ArquivoFormatoAssinaturaId = 39,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 205,
                            ArquivoFormatoAssinaturaId = 39,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 206,
                            ArquivoFormatoAssinaturaId = 39,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 207,
                            ArquivoFormatoAssinaturaId = 39,
                            Byte = (byte)42
                        },
                        new
                        {
                            Id = 208,
                            ArquivoFormatoAssinaturaId = 40,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 209,
                            ArquivoFormatoAssinaturaId = 40,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 210,
                            ArquivoFormatoAssinaturaId = 40,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 211,
                            ArquivoFormatoAssinaturaId = 40,
                            Byte = (byte)43
                        },
                        new
                        {
                            Id = 212,
                            ArquivoFormatoAssinaturaId = 41,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 213,
                            ArquivoFormatoAssinaturaId = 41,
                            Byte = (byte)32
                        },
                        new
                        {
                            Id = 214,
                            ArquivoFormatoAssinaturaId = 41,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 215,
                            ArquivoFormatoAssinaturaId = 42,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 216,
                            ArquivoFormatoAssinaturaId = 42,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 217,
                            ArquivoFormatoAssinaturaId = 42,
                            Byte = (byte)42
                        },
                        new
                        {
                            Id = 218,
                            ArquivoFormatoAssinaturaId = 42,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 219,
                            ArquivoFormatoAssinaturaId = 43,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 220,
                            ArquivoFormatoAssinaturaId = 43,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 221,
                            ArquivoFormatoAssinaturaId = 43,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 222,
                            ArquivoFormatoAssinaturaId = 43,
                            Byte = (byte)42
                        },
                        new
                        {
                            Id = 223,
                            ArquivoFormatoAssinaturaId = 44,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 224,
                            ArquivoFormatoAssinaturaId = 44,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 225,
                            ArquivoFormatoAssinaturaId = 44,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 226,
                            ArquivoFormatoAssinaturaId = 44,
                            Byte = (byte)43
                        },
                        new
                        {
                            Id = 227,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)60
                        },
                        new
                        {
                            Id = 228,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)63
                        },
                        new
                        {
                            Id = 229,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)120
                        },
                        new
                        {
                            Id = 230,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)109
                        },
                        new
                        {
                            Id = 231,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)108
                        },
                        new
                        {
                            Id = 232,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)32
                        },
                        new
                        {
                            Id = 233,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)118
                        },
                        new
                        {
                            Id = 234,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)101
                        },
                        new
                        {
                            Id = 235,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)114
                        },
                        new
                        {
                            Id = 236,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)115
                        },
                        new
                        {
                            Id = 237,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)105
                        },
                        new
                        {
                            Id = 238,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)111
                        },
                        new
                        {
                            Id = 239,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)110
                        },
                        new
                        {
                            Id = 240,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)61
                        },
                        new
                        {
                            Id = 241,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)34
                        },
                        new
                        {
                            Id = 242,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)49
                        },
                        new
                        {
                            Id = 243,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)46
                        },
                        new
                        {
                            Id = 244,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)48
                        },
                        new
                        {
                            Id = 245,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)34
                        },
                        new
                        {
                            Id = 246,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)63
                        },
                        new
                        {
                            Id = 247,
                            ArquivoFormatoAssinaturaId = 45,
                            Byte = (byte)62
                        },
                        new
                        {
                            Id = 248,
                            ArquivoFormatoAssinaturaId = 46,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 249,
                            ArquivoFormatoAssinaturaId = 46,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 250,
                            ArquivoFormatoAssinaturaId = 46,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 251,
                            ArquivoFormatoAssinaturaId = 46,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 252,
                            ArquivoFormatoAssinaturaId = 47,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 253,
                            ArquivoFormatoAssinaturaId = 47,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 254,
                            ArquivoFormatoAssinaturaId = 47,
                            Byte = (byte)76
                        },
                        new
                        {
                            Id = 255,
                            ArquivoFormatoAssinaturaId = 47,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 256,
                            ArquivoFormatoAssinaturaId = 47,
                            Byte = (byte)84
                        },
                        new
                        {
                            Id = 257,
                            ArquivoFormatoAssinaturaId = 47,
                            Byte = (byte)69
                        },
                        new
                        {
                            Id = 258,
                            ArquivoFormatoAssinaturaId = 48,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 259,
                            ArquivoFormatoAssinaturaId = 48,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 260,
                            ArquivoFormatoAssinaturaId = 48,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 261,
                            ArquivoFormatoAssinaturaId = 48,
                            Byte = (byte)112
                        },
                        new
                        {
                            Id = 262,
                            ArquivoFormatoAssinaturaId = 48,
                            Byte = (byte)88
                        },
                        new
                        {
                            Id = 263,
                            ArquivoFormatoAssinaturaId = 49,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 264,
                            ArquivoFormatoAssinaturaId = 49,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 265,
                            ArquivoFormatoAssinaturaId = 49,
                            Byte = (byte)5
                        },
                        new
                        {
                            Id = 266,
                            ArquivoFormatoAssinaturaId = 49,
                            Byte = (byte)6
                        },
                        new
                        {
                            Id = 267,
                            ArquivoFormatoAssinaturaId = 50,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 268,
                            ArquivoFormatoAssinaturaId = 50,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 269,
                            ArquivoFormatoAssinaturaId = 50,
                            Byte = (byte)7
                        },
                        new
                        {
                            Id = 270,
                            ArquivoFormatoAssinaturaId = 50,
                            Byte = (byte)8
                        },
                        new
                        {
                            Id = 271,
                            ArquivoFormatoAssinaturaId = 51,
                            Byte = (byte)87
                        },
                        new
                        {
                            Id = 272,
                            ArquivoFormatoAssinaturaId = 51,
                            Byte = (byte)105
                        },
                        new
                        {
                            Id = 273,
                            ArquivoFormatoAssinaturaId = 51,
                            Byte = (byte)110
                        },
                        new
                        {
                            Id = 274,
                            ArquivoFormatoAssinaturaId = 51,
                            Byte = (byte)90
                        },
                        new
                        {
                            Id = 275,
                            ArquivoFormatoAssinaturaId = 51,
                            Byte = (byte)105
                        },
                        new
                        {
                            Id = 276,
                            ArquivoFormatoAssinaturaId = 51,
                            Byte = (byte)112
                        },
                        new
                        {
                            Id = 277,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 278,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 279,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 280,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 281,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)20
                        },
                        new
                        {
                            Id = 282,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 283,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)1
                        },
                        new
                        {
                            Id = 284,
                            ArquivoFormatoAssinaturaId = 52,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 285,
                            ArquivoFormatoAssinaturaId = 53,
                            Byte = (byte)65
                        },
                        new
                        {
                            Id = 286,
                            ArquivoFormatoAssinaturaId = 53,
                            Byte = (byte)114
                        },
                        new
                        {
                            Id = 287,
                            ArquivoFormatoAssinaturaId = 53,
                            Byte = (byte)67
                        },
                        new
                        {
                            Id = 288,
                            ArquivoFormatoAssinaturaId = 53,
                            Byte = (byte)1
                        },
                        new
                        {
                            Id = 289,
                            ArquivoFormatoAssinaturaId = 54,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 290,
                            ArquivoFormatoAssinaturaId = 54,
                            Byte = (byte)2
                        },
                        new
                        {
                            Id = 291,
                            ArquivoFormatoAssinaturaId = 55,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 292,
                            ArquivoFormatoAssinaturaId = 55,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 293,
                            ArquivoFormatoAssinaturaId = 56,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 294,
                            ArquivoFormatoAssinaturaId = 56,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 295,
                            ArquivoFormatoAssinaturaId = 57,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 296,
                            ArquivoFormatoAssinaturaId = 57,
                            Byte = (byte)8
                        },
                        new
                        {
                            Id = 297,
                            ArquivoFormatoAssinaturaId = 58,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 298,
                            ArquivoFormatoAssinaturaId = 58,
                            Byte = (byte)9
                        },
                        new
                        {
                            Id = 299,
                            ArquivoFormatoAssinaturaId = 59,
                            Byte = (byte)82
                        },
                        new
                        {
                            Id = 300,
                            ArquivoFormatoAssinaturaId = 59,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 301,
                            ArquivoFormatoAssinaturaId = 59,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 302,
                            ArquivoFormatoAssinaturaId = 59,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 303,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)66
                        },
                        new
                        {
                            Id = 304,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)76
                        },
                        new
                        {
                            Id = 305,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 306,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)50
                        },
                        new
                        {
                            Id = 307,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)50
                        },
                        new
                        {
                            Id = 308,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)51
                        },
                        new
                        {
                            Id = 309,
                            ArquivoFormatoAssinaturaId = 60,
                            Byte = (byte)81
                        },
                        new
                        {
                            Id = 310,
                            ArquivoFormatoAssinaturaId = 61,
                            Byte = (byte)66
                        },
                        new
                        {
                            Id = 311,
                            ArquivoFormatoAssinaturaId = 61,
                            Byte = (byte)90
                        },
                        new
                        {
                            Id = 312,
                            ArquivoFormatoAssinaturaId = 61,
                            Byte = (byte)104
                        },
                        new
                        {
                            Id = 313,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)99
                        },
                        new
                        {
                            Id = 314,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)117
                        },
                        new
                        {
                            Id = 315,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)115
                        },
                        new
                        {
                            Id = 316,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)104
                        },
                        new
                        {
                            Id = 317,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 318,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 319,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 320,
                            ArquivoFormatoAssinaturaId = 62,
                            Byte = (byte)2
                        },
                        new
                        {
                            Id = 321,
                            ArquivoFormatoAssinaturaId = 63,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 322,
                            ArquivoFormatoAssinaturaId = 63,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 323,
                            ArquivoFormatoAssinaturaId = 63,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 324,
                            ArquivoFormatoAssinaturaId = 63,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 325,
                            ArquivoFormatoAssinaturaId = 64,
                            Byte = (byte)95
                        },
                        new
                        {
                            Id = 326,
                            ArquivoFormatoAssinaturaId = 64,
                            Byte = (byte)39
                        },
                        new
                        {
                            Id = 327,
                            ArquivoFormatoAssinaturaId = 64,
                            Byte = (byte)168
                        },
                        new
                        {
                            Id = 328,
                            ArquivoFormatoAssinaturaId = 64,
                            Byte = (byte)137
                        },
                        new
                        {
                            Id = 329,
                            ArquivoFormatoAssinaturaId = 65,
                            Byte = (byte)74
                        },
                        new
                        {
                            Id = 330,
                            ArquivoFormatoAssinaturaId = 65,
                            Byte = (byte)65
                        },
                        new
                        {
                            Id = 331,
                            ArquivoFormatoAssinaturaId = 65,
                            Byte = (byte)82
                        },
                        new
                        {
                            Id = 332,
                            ArquivoFormatoAssinaturaId = 65,
                            Byte = (byte)67
                        },
                        new
                        {
                            Id = 333,
                            ArquivoFormatoAssinaturaId = 65,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 334,
                            ArquivoFormatoAssinaturaId = 65,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 335,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 336,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 337,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 338,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 339,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)20
                        },
                        new
                        {
                            Id = 340,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 341,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)8
                        },
                        new
                        {
                            Id = 342,
                            ArquivoFormatoAssinaturaId = 66,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 343,
                            ArquivoFormatoAssinaturaId = 67,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 344,
                            ArquivoFormatoAssinaturaId = 67,
                            Byte = (byte)84
                        },
                        new
                        {
                            Id = 345,
                            ArquivoFormatoAssinaturaId = 67,
                            Byte = (byte)104
                        },
                        new
                        {
                            Id = 346,
                            ArquivoFormatoAssinaturaId = 67,
                            Byte = (byte)100
                        },
                        new
                        {
                            Id = 347,
                            ArquivoFormatoAssinaturaId = 68,
                            Byte = (byte)77
                        },
                        new
                        {
                            Id = 348,
                            ArquivoFormatoAssinaturaId = 68,
                            Byte = (byte)84
                        },
                        new
                        {
                            Id = 349,
                            ArquivoFormatoAssinaturaId = 68,
                            Byte = (byte)104
                        },
                        new
                        {
                            Id = 350,
                            ArquivoFormatoAssinaturaId = 68,
                            Byte = (byte)100
                        },
                        new
                        {
                            Id = 351,
                            ArquivoFormatoAssinaturaId = 69,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 352,
                            ArquivoFormatoAssinaturaId = 69,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 353,
                            ArquivoFormatoAssinaturaId = 69,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 354,
                            ArquivoFormatoAssinaturaId = 69,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 355,
                            ArquivoFormatoAssinaturaId = 70,
                            Byte = (byte)80
                        },
                        new
                        {
                            Id = 356,
                            ArquivoFormatoAssinaturaId = 70,
                            Byte = (byte)75
                        },
                        new
                        {
                            Id = 357,
                            ArquivoFormatoAssinaturaId = 70,
                            Byte = (byte)3
                        },
                        new
                        {
                            Id = 358,
                            ArquivoFormatoAssinaturaId = 70,
                            Byte = (byte)4
                        },
                        new
                        {
                            Id = 359,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)79
                        },
                        new
                        {
                            Id = 360,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)103
                        },
                        new
                        {
                            Id = 361,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)103
                        },
                        new
                        {
                            Id = 362,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 363,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 364,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)2
                        },
                        new
                        {
                            Id = 365,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 366,
                            ArquivoFormatoAssinaturaId = 71,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 367,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)79
                        },
                        new
                        {
                            Id = 368,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)103
                        },
                        new
                        {
                            Id = 369,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)103
                        },
                        new
                        {
                            Id = 370,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 371,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 372,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)2
                        },
                        new
                        {
                            Id = 373,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 374,
                            ArquivoFormatoAssinaturaId = 72,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 375,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)79
                        },
                        new
                        {
                            Id = 376,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)103
                        },
                        new
                        {
                            Id = 377,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)103
                        },
                        new
                        {
                            Id = 378,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 379,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 380,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)2
                        },
                        new
                        {
                            Id = 381,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 382,
                            ArquivoFormatoAssinaturaId = 73,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 383,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)82
                        },
                        new
                        {
                            Id = 384,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)97
                        },
                        new
                        {
                            Id = 385,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)114
                        },
                        new
                        {
                            Id = 386,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)33
                        },
                        new
                        {
                            Id = 387,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 388,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)7
                        },
                        new
                        {
                            Id = 389,
                            ArquivoFormatoAssinaturaId = 74,
                            Byte = (byte)0
                        },
                        new
                        {
                            Id = 390,
                            ArquivoFormatoAssinaturaId = 75,
                            Byte = (byte)67
                        },
                        new
                        {
                            Id = 391,
                            ArquivoFormatoAssinaturaId = 75,
                            Byte = (byte)87
                        },
                        new
                        {
                            Id = 392,
                            ArquivoFormatoAssinaturaId = 75,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 393,
                            ArquivoFormatoAssinaturaId = 76,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 394,
                            ArquivoFormatoAssinaturaId = 76,
                            Byte = (byte)87
                        },
                        new
                        {
                            Id = 395,
                            ArquivoFormatoAssinaturaId = 76,
                            Byte = (byte)83
                        },
                        new
                        {
                            Id = 396,
                            ArquivoFormatoAssinaturaId = 77,
                            Byte = (byte)117
                        },
                        new
                        {
                            Id = 397,
                            ArquivoFormatoAssinaturaId = 77,
                            Byte = (byte)115
                        },
                        new
                        {
                            Id = 398,
                            ArquivoFormatoAssinaturaId = 77,
                            Byte = (byte)116
                        },
                        new
                        {
                            Id = 399,
                            ArquivoFormatoAssinaturaId = 77,
                            Byte = (byte)97
                        },
                        new
                        {
                            Id = 400,
                            ArquivoFormatoAssinaturaId = 77,
                            Byte = (byte)114
                        },
                        new
                        {
                            Id = 401,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)208
                        },
                        new
                        {
                            Id = 402,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)207
                        },
                        new
                        {
                            Id = 403,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)17
                        },
                        new
                        {
                            Id = 404,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)224
                        },
                        new
                        {
                            Id = 405,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)161
                        },
                        new
                        {
                            Id = 406,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)177
                        },
                        new
                        {
                            Id = 407,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)26
                        },
                        new
                        {
                            Id = 408,
                            ArquivoFormatoAssinaturaId = 78,
                            Byte = (byte)225
                        },
                        new
                        {
                            Id = 409,
                            ArquivoFormatoAssinaturaId = 79,
                            Byte = (byte)82
                        },
                        new
                        {
                            Id = 410,
                            ArquivoFormatoAssinaturaId = 79,
                            Byte = (byte)73
                        },
                        new
                        {
                            Id = 411,
                            ArquivoFormatoAssinaturaId = 79,
                            Byte = (byte)70
                        },
                        new
                        {
                            Id = 412,
                            ArquivoFormatoAssinaturaId = 79,
                            Byte = (byte)70
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Claim", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ClaimPaiId")
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimPaiId");

                    b.ToTable("Claim");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            ClaimPaiId = 1002,
                            ClaimType = "AlterarTodosAmbientes",
                            DefaultValue = "True",
                            Descricao = "Alterar todos os ambientes"
                        },
                        new
                        {
                            Id = 1002,
                            ClaimType = "VisualizarTodosAmbientes",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos os ambientes"
                        },
                        new
                        {
                            Id = 1003,
                            ClaimPaiId = 1004,
                            ClaimType = "AlterarMeusAmbientes",
                            DefaultValue = "True",
                            Descricao = "Alterar meus ambientes"
                        },
                        new
                        {
                            Id = 1004,
                            ClaimType = "VisualizarMeusAmbientes",
                            DefaultValue = "True",
                            Descricao = "Visualizar meus ambientes"
                        },
                        new
                        {
                            Id = 2001,
                            ClaimPaiId = 2002,
                            ClaimType = "AlterarTodosUsuarios",
                            DefaultValue = "True",
                            Descricao = "Alterar todos os usuários"
                        },
                        new
                        {
                            Id = 2002,
                            ClaimType = "VisualizarTodosUsuarios",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos os usuários"
                        },
                        new
                        {
                            Id = 2003,
                            ClaimPaiId = 2004,
                            ClaimType = "AlterarMeusUsuarios",
                            DefaultValue = "True",
                            Descricao = "Alterar meus usuários"
                        },
                        new
                        {
                            Id = 2004,
                            ClaimType = "VisualizarMeusUsuarios",
                            DefaultValue = "True",
                            Descricao = "Visualizar meus usuários"
                        },
                        new
                        {
                            Id = 3001,
                            ClaimPaiId = 3002,
                            ClaimType = "AlterarTodosProjetos",
                            DefaultValue = "True",
                            Descricao = "Alterar todos os projetos"
                        },
                        new
                        {
                            Id = 3002,
                            ClaimType = "VisualizarTodosProjetos",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos os projetos"
                        },
                        new
                        {
                            Id = 3003,
                            ClaimPaiId = 3004,
                            ClaimType = "AlterarMeusProjetos",
                            DefaultValue = "True",
                            Descricao = "Alterar meus projetos"
                        },
                        new
                        {
                            Id = 3004,
                            ClaimType = "VisualizarMeusProjetos",
                            DefaultValue = "True",
                            Descricao = "Visualizar meus projetos"
                        },
                        new
                        {
                            Id = 4001,
                            ClaimPaiId = 4002,
                            ClaimType = "AlterarTodosDocumentosTipo",
                            DefaultValue = "True",
                            Descricao = "Alterar todos os tipos de documentos"
                        },
                        new
                        {
                            Id = 4002,
                            ClaimType = "VisualizarTodosDocumentosTipo",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos os tipos de documentos"
                        },
                        new
                        {
                            Id = 4003,
                            ClaimPaiId = 4004,
                            ClaimType = "AlterarMeusDocumentosTipo",
                            DefaultValue = "True",
                            Descricao = "Alterar meus tipos de documentos"
                        },
                        new
                        {
                            Id = 4004,
                            ClaimType = "VisualizarMeusDocumentosTipo",
                            DefaultValue = "True",
                            Descricao = "Visualizar meus tipos de documentos"
                        },
                        new
                        {
                            Id = 5001,
                            ClaimPaiId = 5002,
                            ClaimType = "AlterarTodosEntidades",
                            DefaultValue = "True",
                            Descricao = "Alterar todas as entidades"
                        },
                        new
                        {
                            Id = 5002,
                            ClaimType = "VisualizarTodasEntidades",
                            DefaultValue = "True",
                            Descricao = "Visualizar todas as entidades"
                        },
                        new
                        {
                            Id = 5003,
                            ClaimPaiId = 5004,
                            ClaimType = "AlterarMinhasEntidades",
                            DefaultValue = "True",
                            Descricao = "Alterar minhas entidades"
                        },
                        new
                        {
                            Id = 5004,
                            ClaimType = "VisualizarMinhasEntidades",
                            DefaultValue = "True",
                            Descricao = "Visualizar minhas entidades"
                        },
                        new
                        {
                            Id = 6001,
                            ClaimPaiId = 6002,
                            ClaimType = "AlterarTodosAnexos",
                            DefaultValue = "True",
                            Descricao = "Alterar todos os anexos"
                        },
                        new
                        {
                            Id = 6002,
                            ClaimType = "VisualizarTodasAnexos",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos os anexos"
                        },
                        new
                        {
                            Id = 6003,
                            ClaimPaiId = 6004,
                            ClaimType = "AlterarMeusAnexos",
                            DefaultValue = "True",
                            Descricao = "Alterar meus anexos"
                        },
                        new
                        {
                            Id = 6004,
                            ClaimType = "VisualizarMeusAnexos",
                            DefaultValue = "True",
                            Descricao = "Visualizar meus anexos"
                        },
                        new
                        {
                            Id = 6005,
                            ClaimPaiId = 6006,
                            ClaimType = "AlterarTodosAnexosAssociados",
                            DefaultValue = "True",
                            Descricao = "Alterar todo anexos associados"
                        },
                        new
                        {
                            Id = 6006,
                            ClaimPaiId = 6006,
                            ClaimType = "VisualizarTodosAnexosAssociados",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos anexos associados"
                        },
                        new
                        {
                            Id = 7001,
                            ClaimPaiId = 7002,
                            ClaimType = "AlterarTodosProcessamentos",
                            DefaultValue = "True",
                            Descricao = "Alterar todos os processamentos"
                        },
                        new
                        {
                            Id = 7002,
                            ClaimType = "VisualizarTodasProcessamentos",
                            DefaultValue = "True",
                            Descricao = "Visualizar todos os processamentos"
                        },
                        new
                        {
                            Id = 7003,
                            ClaimPaiId = 7004,
                            ClaimType = "AlterarMeusProcessamentos",
                            DefaultValue = "True",
                            Descricao = "Alterar meus processamentos"
                        },
                        new
                        {
                            Id = 7004,
                            ClaimType = "VisualizarMeusProcessamentos",
                            DefaultValue = "True",
                            Descricao = "Visualizar meus processamentos"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.ClaimGrupo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("ClaimGrupo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos ambientes da plataforma.",
                            Name = "Ambiente"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos usuários da plataforma.",
                            Name = "Usuário"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos projetos da plataforma.",
                            Name = "Projeto"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos documentos da plataforma.",
                            Name = "Tipo de Documento"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos entidades da plataforma.",
                            Name = "Entidade"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos anexos da plataforma.",
                            Name = "Anexos"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Estas alçadas concedem permissões relacionadas ao gerenciamento dos processamentos da plataforma.",
                            Name = "Processamentos"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Documento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Mascara")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaTipoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("PessoaTipoId");

                    b.ToTable("Documento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Mascara = "999.999.999-99",
                            Nome = "CPF",
                            PaisId = 1,
                            PessoaTipoId = 1,
                            Principal = true
                        },
                        new
                        {
                            Id = 2,
                            Mascara = "00.000.000/0000-00",
                            Nome = "CNPJ",
                            PaisId = 1,
                            PessoaTipoId = 2,
                            Principal = true
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.DocumentoTipo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("DocumentoTipo");
                });

            modelBuilder.Entity("Dominio.Entidades.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CorpoAnexoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EnviadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("RemetenteEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CorpoAnexoId")
                        .IsUnique();

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Dominio.Entidades.EmailDestinatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmailDestinatarioTipoId")
                        .HasColumnType("int");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailDestinatarioTipoId");

                    b.HasIndex("EmailId");

                    b.ToTable("EmailDestinatario", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.EmailDestinatarioTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("EmailDestinatarioTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Usuario"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Contato"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Entidade", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Dados")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DocumentoTipoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("DocumentoTipoId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Entidade");
                });

            modelBuilder.Entity("Dominio.Entidades.Interacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CriadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<int>("InteracaoTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("InteracaoTipoId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Interacao", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.InteracaoTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("InteracaoTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ambiente"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Usuario"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Projeto"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Pais", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DocumentoPadrao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CultureInfo = "pt-BR",
                            DocumentoPadrao = "CNPJ",
                            Flag = "flag-icon-br",
                            Nome = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            CultureInfo = "es-ES",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-ar",
                            Nome = "Argentina"
                        },
                        new
                        {
                            Id = 3,
                            CultureInfo = "es-ES",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-bo",
                            Nome = "Bolívia"
                        },
                        new
                        {
                            Id = 4,
                            CultureInfo = "es-ES",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-co",
                            Nome = "Colômbia"
                        },
                        new
                        {
                            Id = 5,
                            CultureInfo = "en-US",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-gf",
                            Nome = "Guiana"
                        },
                        new
                        {
                            Id = 6,
                            CultureInfo = "es-ES",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-py",
                            Nome = "Paraguai"
                        },
                        new
                        {
                            Id = 7,
                            CultureInfo = "es-ES",
                            DocumentoPadrao = "RUC",
                            Flag = "flag-icon-pe",
                            Nome = "Peru"
                        },
                        new
                        {
                            Id = 8,
                            CultureInfo = "en-US",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-sr",
                            Nome = "Suriname"
                        },
                        new
                        {
                            Id = 9,
                            CultureInfo = "en-US",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-uy",
                            Nome = "Uruguai"
                        },
                        new
                        {
                            Id = 10,
                            CultureInfo = "es-ES",
                            DocumentoPadrao = "",
                            Flag = "flag-icon-ve",
                            Nome = "Venezuela"
                        },
                        new
                        {
                            Id = 11,
                            CultureInfo = "en-US",
                            DocumentoPadrao = "Registry ID",
                            Flag = "flag-icon-ca",
                            Nome = "Canada"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Papel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Papel");

                    b.HasData(
                        new
                        {
                            Id = "43e9fd1c-a4f2-4165-9cee-3edb4931f1af",
                            Nome = "Sistema"
                        },
                        new
                        {
                            Id = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            Nome = "KPMG"
                        },
                        new
                        {
                            Id = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            Nome = "Administrador"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.PapelAcessivel", b =>
                {
                    b.Property<string>("PapelId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PapelAcessanteId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("PapelId", "PapelAcessanteId");

                    b.HasIndex("PapelAcessanteId");

                    b.ToTable("PapelAcessivel");

                    b.HasData(
                        new
                        {
                            PapelId = "43e9fd1c-a4f2-4165-9cee-3edb4931f1af",
                            PapelAcessanteId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4"
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            PapelAcessanteId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4"
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            PapelAcessanteId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4"
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            PapelAcessanteId = "8a55ed94-eece-4e7f-ab46-43185864b7d1"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.PapelClaim", b =>
                {
                    b.Property<string>("PapelId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.HasKey("PapelId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("PapelClaim");

                    b.HasData(
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 1001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 1002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 1003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 1004
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 2001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 2002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 2003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 2004
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 3001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 3002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 3003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 3004
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 4001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 4002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 4003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 4004
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 5001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 5002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 5003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 5004
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 6001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 6002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 6003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 6004
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 6005
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 6006
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 7001
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 7002
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 7003
                        },
                        new
                        {
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimId = 7004
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 1003
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 1004
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 2003
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 2004
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 3003
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 3004
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 4003
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 4004
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 5001
                        },
                        new
                        {
                            PapelId = "8a55ed94-eece-4e7f-ab46-43185864b7d1",
                            ClaimId = 5004
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.PerguntaResposta", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CaminhoBlob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dados")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Pergunta")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProjetoId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Prompt")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Resposta")
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("TokensPergunta")
                        .HasColumnType("int");

                    b.Property<int?>("TokensResposta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("PerguntaResposta", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DocumentoTipoId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<int>("PessoaTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("Documento");

                    b.HasIndex("DocumentoTipoId");

                    b.HasIndex("PaisId");

                    b.HasIndex("PessoaTipoId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.PessoaTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PessoaTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fisica"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Juridica"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Processamento", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CriadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FimProcessamentoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InicioProcessamentoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcessamentoStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessamentoTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("QueueExpiraEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueueMessageId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("ProcessamentoStatusId");

                    b.HasIndex("ProcessamentoTipoId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Processamento", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessamentoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessamentoId");

                    b.ToTable("ProcessamentoLog");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProcessamentoStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Solicitado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Em Processamento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Processado com Erro"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Processado com Sucesso"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("QueueNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProcessamentoTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Indexer",
                            QueueNome = "processamentoindexer"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Email",
                            QueueNome = "processamentoemail"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Anexo",
                            QueueNome = "processamentoanexo"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Ner",
                            QueueNome = "processamentoner"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Pergunta",
                            QueueNome = "processamentopergunta"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.Projeto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("Dominio.Entidades.ProjetoAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnexoId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentoTipoId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProcessamentoIndexerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProjetoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AnexoId");

                    b.HasIndex("DocumentoTipoId");

                    b.HasIndex("ProcessamentoIndexerId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ProjetoAnexo");
                });

            modelBuilder.Entity("Dominio.Entidades.RelacaoClaimGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClaimGrupoId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimGrupoId");

                    b.HasIndex("ClaimId");

                    b.ToTable("RelacaoClaimGrupo");
                });

            modelBuilder.Entity("Dominio.Entidades.TemaConfiguracao", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("BoxedLayout")
                        .HasColumnType("bit");

                    b.Property<string>("Components")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("DarkMode")
                        .HasColumnType("bit");

                    b.Property<bool>("HeaderPosition")
                        .HasColumnType("bit");

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LogoBg")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NavbarBg")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SidebarColor")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("SidebarPosition")
                        .HasColumnType("bit");

                    b.Property<string>("SidebarType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("TemaConfiguracao");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("EmailBoasVindasEnviado")
                        .HasColumnType("bit");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<bool>("Federado")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IdentityIdGeradoLocalmente")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PapelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UltimaAlteracaoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaAlteracaoPorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UltimoAcessoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimoAcessoIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("PapelId");

                    b.HasIndex("UltimaAlteracaoPorId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            AccessFailedCount = 0,
                            EmailBoasVindasEnviado = false,
                            Excluido = false,
                            Federado = false,
                            IdentityId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            IdentityIdGeradoLocalmente = false,
                            LockoutEnabled = false,
                            Nome = "Usuário de integração",
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            UserName = "integracao@watch.kpmg.com.br"
                        },
                        new
                        {
                            Id = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            AccessFailedCount = 0,
                            CriadoEm = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CriadoPorId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            EmailBoasVindasEnviado = false,
                            Excluido = false,
                            Federado = false,
                            IdentityId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            IdentityIdGeradoLocalmente = false,
                            LockoutEnabled = false,
                            Nome = "Administrador",
                            PapelId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            UltimaAlteracaoEm = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UltimaAlteracaoPorId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            UserName = "admin@kpmg.com"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.UsuarioClaim", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("UsuarioId", "ClaimType", "ClaimValue");

                    b.ToTable("UserClaim");

                    b.HasData(
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodosAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodosAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMeusAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMeusAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMeusAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMeusAmbientes",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodosUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodosUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMeusUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMeusUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMeusUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMeusUsuarios",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodosProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodosProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMeusProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMeusProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMeusProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMeusProjetos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodosDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodosDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMeusDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMeusDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMeusDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMeusDocumentosTipo",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodasEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodasEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMinhasEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMinhasEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMinhasEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMinhasEntidades",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodasAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodasAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMeusAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMeusAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMeusAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMeusAnexos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosAnexosAssociados",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosAnexosAssociados",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodosAnexosAssociados",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodosAnexosAssociados",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarTodosProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarTodosProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarTodasProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarTodasProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "AlterarMeusProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "AlterarMeusProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            ClaimType = "VisualizarMeusProcessamentos",
                            ClaimValue = "True"
                        },
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            ClaimType = "VisualizarMeusProcessamentos",
                            ClaimValue = "True"
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.UsuarioLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioLogin");
                });

            modelBuilder.Entity("UsuarioAmbiente", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "AmbienteId");

                    b.HasIndex("AmbienteId");

                    b.ToTable("UsuarioAmbiente");

                    b.HasData(
                        new
                        {
                            UsuarioId = "f60753d7-c5a7-4496-a360-c1a301d87763",
                            AmbienteId = 1
                        },
                        new
                        {
                            UsuarioId = "6803f6e9-3f50-4b8d-b46b-fbea4827d2a4",
                            AmbienteId = 1
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.EmailDestinatarioUsuario", b =>
                {
                    b.HasBaseType("Dominio.Entidades.EmailDestinatario");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EmailDestinatarioUsuario", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.InteracaoAmbiente", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Interacao");

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int");

                    b.HasIndex("AmbienteId");

                    b.ToTable("InteracaoAmbiente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.InteracaoUsuario", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Interacao");

                    b.Property<string>("AcessoIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasIndex("UsuarioId");

                    b.ToTable("InteracaoUsuario", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.PessoaJuridica", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Pessoa");

                    b.Property<string>("DadosCadastrais")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.ToTable("PessoaJuridica", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            CriadoEm = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Documento = "11111111111111",
                            DocumentoTipoId = 2,
                            Excluido = false,
                            Nome = "KPMG - Administrativo",
                            PaisId = 1,
                            PessoaTipoId = 2,
                            UltimaAlteracaoEm = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DadosCadastrais = ""
                        });
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoAnexo", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Processamento");

                    b.Property<int>("ProjetoAnexoId")
                        .HasColumnType("int");

                    b.HasIndex("ProjetoAnexoId")
                        .IsUnique()
                        .HasFilter("[ProjetoAnexoId] IS NOT NULL");

                    b.ToTable("ProcessamentoAnexo", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoEmail", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Processamento");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.HasIndex("EmailId")
                        .IsUnique()
                        .HasFilter("[EmailId] IS NOT NULL");

                    b.ToTable("ProcessamentoEmail", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoIndexer", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Processamento");

                    b.Property<string>("BlobFolder")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dados")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DataSourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeletarIndexer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FimIndexacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndexerName")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("InicioIndexacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LiberadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("LiberadoPorId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProjetoId")
                        .HasColumnType("nvarchar(36)");

                    b.HasIndex("LiberadoPorId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ProcessamentoIndexer", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoNer", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Processamento");

                    b.Property<string>("ProjetoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ProcessamentoNer", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoPergunta", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Processamento");

                    b.Property<string>("EntidadeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("FimConsulta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InicioConsulta")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerguntaRespostaId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProcessamentoNerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("ProjetoAnexoId")
                        .HasColumnType("int");

                    b.HasIndex("EntidadeId");

                    b.HasIndex("PerguntaRespostaId");

                    b.HasIndex("ProcessamentoNerId");

                    b.HasIndex("ProjetoAnexoId");

                    b.ToTable("ProcessamentoPergunta", (string)null);
                });

            modelBuilder.Entity("AnexoEmail", b =>
                {
                    b.HasOne("Dominio.Entidades.Anexo", null)
                        .WithMany()
                        .HasForeignKey("AnexoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Email", null)
                        .WithMany()
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.Ambiente", b =>
                {
                    b.HasOne("Dominio.Entidades.PessoaJuridica", "Cliente")
                        .WithMany("Ambientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("AmbientesCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("AmbientesUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cliente");

                    b.Navigation("CriadoPor");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.Anexo", b =>
                {
                    b.HasOne("Dominio.Entidades.AnexoArquivoTipo", "AnexoArquivoTipo")
                        .WithMany("Anexos")
                        .HasForeignKey("AnexoArquivoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.AnexoTipo", "AnexoTipo")
                        .WithMany("Anexos")
                        .HasForeignKey("AnexoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.ArquivoFormato", "ArquivoFormato")
                        .WithMany("Anexos")
                        .HasForeignKey("ArquivoFormatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("AnexosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("AnexosUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AnexoArquivoTipo");

                    b.Navigation("AnexoTipo");

                    b.Navigation("ArquivoFormato");

                    b.Navigation("CriadoPor");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoArquivoTipoArquivoFormato", b =>
                {
                    b.HasOne("Dominio.Entidades.AnexoArquivoTipo", "AnexoArquivoTipo")
                        .WithMany("FormatosPermitidos")
                        .HasForeignKey("AnexoArquivoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.ArquivoFormato", "ArquivoFormato")
                        .WithMany("AnexoArquivoTipos")
                        .HasForeignKey("ArquivoFormatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnexoArquivoTipo");

                    b.Navigation("ArquivoFormato");
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoPagina", b =>
                {
                    b.HasOne("Dominio.Entidades.Anexo", "Anexo")
                        .WithMany("PaginasPai")
                        .HasForeignKey("AnexoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Anexo", "AnexoPai")
                        .WithMany("Paginas")
                        .HasForeignKey("AnexoPaiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.PerguntaResposta", null)
                        .WithMany("PaginasRelacionadas")
                        .HasForeignKey("PerguntaRespostaId");

                    b.Navigation("Anexo");

                    b.Navigation("AnexoPai");
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormatoAssinatura", b =>
                {
                    b.HasOne("Dominio.Entidades.ArquivoFormato", "ArquivoFormato")
                        .WithMany("ArquivoFormatoAssinaturas")
                        .HasForeignKey("ArquivoFormatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArquivoFormato");
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormatoAssinaturaByte", b =>
                {
                    b.HasOne("Dominio.Entidades.ArquivoFormatoAssinatura", "ArquivoFormatoAssinatura")
                        .WithMany("ArquivoFormatoAssinaturaBytes")
                        .HasForeignKey("ArquivoFormatoAssinaturaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArquivoFormatoAssinatura");
                });

            modelBuilder.Entity("Dominio.Entidades.Claim", b =>
                {
                    b.HasOne("Dominio.Entidades.Claim", "ClaimPai")
                        .WithMany("ClaimsFilhas")
                        .HasForeignKey("ClaimPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClaimPai");
                });

            modelBuilder.Entity("Dominio.Entidades.Documento", b =>
                {
                    b.HasOne("Dominio.Entidades.Pais", "Pais")
                        .WithMany("DocumentoTipos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.PessoaTipo", "PessoaTipo")
                        .WithMany("DocumentoTipos")
                        .HasForeignKey("PessoaTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pais");

                    b.Navigation("PessoaTipo");
                });

            modelBuilder.Entity("Dominio.Entidades.DocumentoTipo", b =>
                {
                    b.HasOne("Dominio.Entidades.Ambiente", "Ambiente")
                        .WithMany("DocumentosTipo")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("DocumentosTipoCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("DocumentosTipoUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Ambiente");

                    b.Navigation("CriadoPor");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.Email", b =>
                {
                    b.HasOne("Dominio.Entidades.Anexo", "CorpoAnexo")
                        .WithOne("EmailCorpo")
                        .HasForeignKey("Dominio.Entidades.Email", "CorpoAnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorpoAnexo");
                });

            modelBuilder.Entity("Dominio.Entidades.EmailDestinatario", b =>
                {
                    b.HasOne("Dominio.Entidades.EmailDestinatarioTipo", "EmailDestinatarioTipo")
                        .WithMany("EmailsDestinatarios")
                        .HasForeignKey("EmailDestinatarioTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Email", "Email")
                        .WithMany("EmailsDestinatarios")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Email");

                    b.Navigation("EmailDestinatarioTipo");
                });

            modelBuilder.Entity("Dominio.Entidades.Entidade", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("EntidadesCriadas")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.DocumentoTipo", "DocumentoTipo")
                        .WithMany("Entidades")
                        .HasForeignKey("DocumentoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("EntidadesUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CriadoPor");

                    b.Navigation("DocumentoTipo");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.Interacao", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("InteracoesCriadas")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.InteracaoTipo", "InteracaoTipo")
                        .WithMany("Interacoes")
                        .HasForeignKey("InteracaoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("InteracoesUltimasAlteracoes")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CriadoPor");

                    b.Navigation("InteracaoTipo");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.PapelAcessivel", b =>
                {
                    b.HasOne("Dominio.Entidades.Papel", "PapelAcessante")
                        .WithMany("PapeisAcessiveis")
                        .HasForeignKey("PapelAcessanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Papel", "Papel")
                        .WithMany("PapeisAcessantes")
                        .HasForeignKey("PapelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Papel");

                    b.Navigation("PapelAcessante");
                });

            modelBuilder.Entity("Dominio.Entidades.PapelClaim", b =>
                {
                    b.HasOne("Dominio.Entidades.Claim", "Claim")
                        .WithMany("Papeis")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Papel", "Papel")
                        .WithMany("Claims")
                        .HasForeignKey("PapelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Papel");
                });

            modelBuilder.Entity("Dominio.Entidades.PerguntaResposta", b =>
                {
                    b.HasOne("Dominio.Entidades.Projeto", "Projeto")
                        .WithMany("PerguntasRespostas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Dominio.Entidades.Pessoa", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("PessoasCriadas")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.Documento", "DocumentoTipo")
                        .WithMany("Pessoas")
                        .HasForeignKey("DocumentoTipoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.Pais", "Pais")
                        .WithMany("Pessoas")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.PessoaTipo", "PessoaTipo")
                        .WithMany("Pessoas")
                        .HasForeignKey("PessoaTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("PessoasUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CriadoPor");

                    b.Navigation("DocumentoTipo");

                    b.Navigation("Pais");

                    b.Navigation("PessoaTipo");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.Processamento", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("ProcessamentosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.ProcessamentoStatus", "ProcessamentoStatus")
                        .WithMany("Processamentos")
                        .HasForeignKey("ProcessamentoStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.ProcessamentoTipo", "ProcessamentoTipo")
                        .WithMany("Processamentos")
                        .HasForeignKey("ProcessamentoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("ProcessamentosUltimasAlteracoes")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CriadoPor");

                    b.Navigation("ProcessamentoStatus");

                    b.Navigation("ProcessamentoTipo");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoLog", b =>
                {
                    b.HasOne("Dominio.Entidades.Processamento", "Processamento")
                        .WithMany("ProcessamentoLogs")
                        .HasForeignKey("ProcessamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processamento");
                });

            modelBuilder.Entity("Dominio.Entidades.Projeto", b =>
                {
                    b.HasOne("Dominio.Entidades.Ambiente", "Ambiente")
                        .WithMany("Projetos")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("ProjetosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("ProjetosUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Ambiente");

                    b.Navigation("CriadoPor");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.ProjetoAnexo", b =>
                {
                    b.HasOne("Dominio.Entidades.Anexo", "Anexo")
                        .WithMany("Projetos")
                        .HasForeignKey("AnexoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.DocumentoTipo", "DocumentoTipo")
                        .WithMany("Anexos")
                        .HasForeignKey("DocumentoTipoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.ProcessamentoIndexer", "ProcessamentoIndexer")
                        .WithMany("Anexos")
                        .HasForeignKey("ProcessamentoIndexerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Projeto", "Projeto")
                        .WithMany("Anexos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Anexo");

                    b.Navigation("DocumentoTipo");

                    b.Navigation("ProcessamentoIndexer");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Dominio.Entidades.RelacaoClaimGrupo", b =>
                {
                    b.HasOne("Dominio.Entidades.ClaimGrupo", "Grupo")
                        .WithMany("ClaimsImpactantes")
                        .HasForeignKey("ClaimGrupoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Claim", "Claim")
                        .WithMany("GruposImpactados")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Dominio.Entidades.TemaConfiguracao", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "Usuario")
                        .WithOne("TemaConfiguracao")
                        .HasForeignKey("Dominio.Entidades.TemaConfiguracao", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "CriadoPor")
                        .WithMany("UsuariosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.Papel", "Papel")
                        .WithMany("Usuarios")
                        .HasForeignKey("PapelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "UltimaAlteracaoPor")
                        .WithMany("UsuariosUltimaAlteracao")
                        .HasForeignKey("UltimaAlteracaoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CriadoPor");

                    b.Navigation("Papel");

                    b.Navigation("UltimaAlteracaoPor");
                });

            modelBuilder.Entity("Dominio.Entidades.UsuarioClaim", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Claims")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entidades.UsuarioLogin", b =>
                {
                    b.HasOne("Dominio.Entidades.Usuario", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UsuarioAmbiente", b =>
                {
                    b.HasOne("Dominio.Entidades.Ambiente", null)
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.EmailDestinatarioUsuario", b =>
                {
                    b.HasOne("Dominio.Entidades.EmailDestinatario", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.EmailDestinatarioUsuario", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Emails")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entidades.InteracaoAmbiente", b =>
                {
                    b.HasOne("Dominio.Entidades.Ambiente", "Ambiente")
                        .WithMany("Interacoes")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Interacao", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.InteracaoAmbiente", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("Dominio.Entidades.InteracaoUsuario", b =>
                {
                    b.HasOne("Dominio.Entidades.Interacao", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.InteracaoUsuario", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Interacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entidades.PessoaJuridica", b =>
                {
                    b.HasOne("Dominio.Entidades.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.PessoaJuridica", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoAnexo", b =>
                {
                    b.HasOne("Dominio.Entidades.Processamento", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.ProcessamentoAnexo", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.ProjetoAnexo", "ProjetoAnexo")
                        .WithOne("ProcessamentoAnexo")
                        .HasForeignKey("Dominio.Entidades.ProcessamentoAnexo", "ProjetoAnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjetoAnexo");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoEmail", b =>
                {
                    b.HasOne("Dominio.Entidades.Email", "Email")
                        .WithOne("ProcessamentoEmail")
                        .HasForeignKey("Dominio.Entidades.ProcessamentoEmail", "EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Processamento", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.ProcessamentoEmail", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoIndexer", b =>
                {
                    b.HasOne("Dominio.Entidades.Processamento", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.ProcessamentoIndexer", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "LiberadoPor")
                        .WithMany("ProcessamentosIndexacaoLiberados")
                        .HasForeignKey("LiberadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.Projeto", "Projeto")
                        .WithMany("ProcessamentosIndexers")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LiberadoPor");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoNer", b =>
                {
                    b.HasOne("Dominio.Entidades.Processamento", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.ProcessamentoNer", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Projeto", "Projeto")
                        .WithMany("ProcessamentosNer")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoPergunta", b =>
                {
                    b.HasOne("Dominio.Entidades.Entidade", "Entidade")
                        .WithMany("ProcessamentosPerguntas")
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Processamento", null)
                        .WithOne()
                        .HasForeignKey("Dominio.Entidades.ProcessamentoPergunta", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.PerguntaResposta", "PerguntaResposta")
                        .WithMany("ProcessamentoPerguntas")
                        .HasForeignKey("PerguntaRespostaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.ProcessamentoNer", "ProcessamentoNer")
                        .WithMany("ProcessamentosPerguntaGeradas")
                        .HasForeignKey("ProcessamentoNerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.ProjetoAnexo", "ProjetoAnexo")
                        .WithMany("ProcessamentosPerguntas")
                        .HasForeignKey("ProjetoAnexoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidade");

                    b.Navigation("PerguntaResposta");

                    b.Navigation("ProcessamentoNer");

                    b.Navigation("ProjetoAnexo");
                });

            modelBuilder.Entity("Dominio.Entidades.Ambiente", b =>
                {
                    b.Navigation("DocumentosTipo");

                    b.Navigation("Interacoes");

                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("Dominio.Entidades.Anexo", b =>
                {
                    b.Navigation("EmailCorpo")
                        .IsRequired();

                    b.Navigation("Paginas");

                    b.Navigation("PaginasPai");

                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoArquivoTipo", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("FormatosPermitidos");
                });

            modelBuilder.Entity("Dominio.Entidades.AnexoTipo", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormato", b =>
                {
                    b.Navigation("AnexoArquivoTipos");

                    b.Navigation("Anexos");

                    b.Navigation("ArquivoFormatoAssinaturas");
                });

            modelBuilder.Entity("Dominio.Entidades.ArquivoFormatoAssinatura", b =>
                {
                    b.Navigation("ArquivoFormatoAssinaturaBytes");
                });

            modelBuilder.Entity("Dominio.Entidades.Claim", b =>
                {
                    b.Navigation("ClaimsFilhas");

                    b.Navigation("GruposImpactados");

                    b.Navigation("Papeis");
                });

            modelBuilder.Entity("Dominio.Entidades.ClaimGrupo", b =>
                {
                    b.Navigation("ClaimsImpactantes");
                });

            modelBuilder.Entity("Dominio.Entidades.Documento", b =>
                {
                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("Dominio.Entidades.DocumentoTipo", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Entidades");
                });

            modelBuilder.Entity("Dominio.Entidades.Email", b =>
                {
                    b.Navigation("EmailsDestinatarios");

                    b.Navigation("ProcessamentoEmail")
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.EmailDestinatarioTipo", b =>
                {
                    b.Navigation("EmailsDestinatarios");
                });

            modelBuilder.Entity("Dominio.Entidades.Entidade", b =>
                {
                    b.Navigation("ProcessamentosPerguntas");
                });

            modelBuilder.Entity("Dominio.Entidades.InteracaoTipo", b =>
                {
                    b.Navigation("Interacoes");
                });

            modelBuilder.Entity("Dominio.Entidades.Pais", b =>
                {
                    b.Navigation("DocumentoTipos");

                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("Dominio.Entidades.Papel", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("PapeisAcessantes");

                    b.Navigation("PapeisAcessiveis");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entidades.PerguntaResposta", b =>
                {
                    b.Navigation("PaginasRelacionadas");

                    b.Navigation("ProcessamentoPerguntas");
                });

            modelBuilder.Entity("Dominio.Entidades.PessoaTipo", b =>
                {
                    b.Navigation("DocumentoTipos");

                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("Dominio.Entidades.Processamento", b =>
                {
                    b.Navigation("ProcessamentoLogs");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoStatus", b =>
                {
                    b.Navigation("Processamentos");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoTipo", b =>
                {
                    b.Navigation("Processamentos");
                });

            modelBuilder.Entity("Dominio.Entidades.Projeto", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("PerguntasRespostas");

                    b.Navigation("ProcessamentosIndexers");

                    b.Navigation("ProcessamentosNer");
                });

            modelBuilder.Entity("Dominio.Entidades.ProjetoAnexo", b =>
                {
                    b.Navigation("ProcessamentoAnexo")
                        .IsRequired();

                    b.Navigation("ProcessamentosPerguntas");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("AmbientesCriados");

                    b.Navigation("AmbientesUltimaAlteracao");

                    b.Navigation("AnexosCriados");

                    b.Navigation("AnexosUltimaAlteracao");

                    b.Navigation("Claims");

                    b.Navigation("DocumentosTipoCriados");

                    b.Navigation("DocumentosTipoUltimaAlteracao");

                    b.Navigation("Emails");

                    b.Navigation("EntidadesCriadas");

                    b.Navigation("EntidadesUltimaAlteracao");

                    b.Navigation("Interacoes");

                    b.Navigation("InteracoesCriadas");

                    b.Navigation("InteracoesUltimasAlteracoes");

                    b.Navigation("Logins");

                    b.Navigation("PessoasCriadas");

                    b.Navigation("PessoasUltimaAlteracao");

                    b.Navigation("ProcessamentosCriados");

                    b.Navigation("ProcessamentosIndexacaoLiberados");

                    b.Navigation("ProcessamentosUltimasAlteracoes");

                    b.Navigation("ProjetosCriados");

                    b.Navigation("ProjetosUltimaAlteracao");

                    b.Navigation("TemaConfiguracao")
                        .IsRequired();

                    b.Navigation("UsuariosCriados");

                    b.Navigation("UsuariosUltimaAlteracao");
                });

            modelBuilder.Entity("Dominio.Entidades.PessoaJuridica", b =>
                {
                    b.Navigation("Ambientes");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoIndexer", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("Dominio.Entidades.ProcessamentoNer", b =>
                {
                    b.Navigation("ProcessamentosPerguntaGeradas");
                });
#pragma warning restore 612, 618
        }
    }
}
